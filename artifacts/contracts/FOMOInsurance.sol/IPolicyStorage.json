{
  "_format": "hh-sol-artifact-1",
  "contractName": "IPolicyStorage",
  "sourceName": "contracts/FOMOInsurance.sol",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "payoutAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "upsideShareBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "entryPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiryTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum IPolicyStorage.PolicyState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct IPolicyStorage.Policy",
          "name": "policy",
          "type": "tuple"
        }
      ],
      "name": "addPolicy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "maxUpsideShareBps",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minUpsideShareBps",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxPayoutBps",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minPayoutBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "minDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "platformFeeBps",
              "type": "uint16"
            }
          ],
          "internalType": "struct IPolicyStorage.Config",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNextPolicyId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        }
      ],
      "name": "getPolicy",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "payoutAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "upsideShareBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "entryPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiryTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum IPolicyStorage.PolicyState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct IPolicyStorage.Policy",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementPolicyId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "maxUpsideShareBps",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minUpsideShareBps",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "maxPayoutBps",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "minPayoutBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "minDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "platformFeeBps",
              "type": "uint16"
            }
          ],
          "internalType": "struct IPolicyStorage.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "payoutToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "payoutAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "upsideShareBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "entryPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiryTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum IPolicyStorage.PolicyState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct IPolicyStorage.Policy",
          "name": "policy",
          "type": "tuple"
        }
      ],
      "name": "setPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
