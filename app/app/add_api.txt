// Fetch Coingecko ARB/USD price export async function fetchCoingeckoPrice(): Promise<BigNumber> { const url = "https://api.coingecko.com/api/v3/simple/price?ids=arbitrum&vs_currencies=usd"; const res = await fetch(url); if (!res.ok) throw new Error("Coingecko API request failed"); const data = await res.json(); const price = parseFloat(data.arbitrum?.usd); if (isNaN(price)) throw new Error("invalid coingecko price"); return new BigNumber(price); } // Fetch CoinPaprika ARB/USD price export async function fetchCoinPaprikaPrice(): Promise<BigNumber> { const url = "https://api.coinpaprika.com/v1/tickers/arb-arbitrum"; const res = await fetch(url); if (!res.ok) throw new Error("CoinPaprika API request failed"); const data = await res.json(); const price = parseFloat(data.quotes?.USD?.price); if (isNaN(price)) throw new Error("invalid coinpaprika price"); return new BigNumber(price); } // Fetch OKX ARB/USDC price export async function fetchOKXPrice(): Promise<BigNumber> { const url = "https://www.okx.com/api/v5/market/ticker?instId=ARB-USDT"; const res = await fetch(url); if (!res.ok) throw new Error("OKX API request failed"); const data = await res.json(); const price = parseFloat(data?.data?.[0]?.last); if (isNaN(price)) throw new Error("invalid okx price"); return new BigNumber(price); } // Fetch Binance ARB/USDC price export async function fetchBinancePrice(): Promise<BigNumber> { const url = "https://api.binance.com/api/v3/ticker/price?symbol=ARBUSDC"; const res = await fetch(url); if (!res.ok) throw new Error("Binance API request failed"); const data = await res.json(); const price = parseFloat(data?.price); if (isNaN(price)) throw new Error("invalid binance price"); return new BigNumber(price); } // Fetch CoinMarketCap ARB/USD price using the provided API key export async function fetchCoinMarketCapPrice(): Promise<BigNumber> { const url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?symbol=ARB'; const res = await fetch(url, { headers: { 'X-CMC_PRO_API_KEY': process.env.COINMARKETCAP_API_KEY || '' } }); if (!res.ok) throw new Error("CoinMarketCap API request failed"); const data = await res.json(); const price = parseFloat(data?.data?.ARB?.quote?.USD?.price); if (isNaN(price)) throw new Error("invalid coinmarketcap price"); return new BigNumber(price); }